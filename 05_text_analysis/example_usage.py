# example_usage.py
"""
Ejemplos de uso del m√≥dulo de an√°lisis de textos largos
Demuestra diferentes casos de uso y funcionalidades
"""

import os
from pathlib import Path
from long_text_analyzer import LongTextAnalyzer
from interview_analyzer import InterviewAnalyzer


def example_basic_text_analysis():
    """Ejemplo b√°sico de an√°lisis de texto largo"""
    print("=" * 60)
    print("üìù EJEMPLO 1: An√°lisis B√°sico de Texto Largo")
    print("=" * 60)

    # Texto de ejemplo
    sample_text = """
    La inteligencia artificial (IA) ha experimentado un crecimiento exponencial en los √∫ltimos a√±os,
    transformando industrias enteras y redefiniendo la manera en que interactuamos con la tecnolog√≠a.
    Desde los sistemas de recomendaci√≥n que utilizan plataformas como Netflix y Amazon, hasta los
    veh√≠culos aut√≥nomos que prometen revolucionar el transporte, la IA se ha convertido en una
    fuerza omnipresente en nuestras vidas.
    
    Los algoritmos de machine learning, especialmente las redes neuronales profundas, han demostrado
    capacidades extraordinarias en tareas que antes se consideraban exclusivamente humanas. El
    procesamiento de lenguaje natural, el reconocimiento de im√°genes, y la toma de decisiones
    complejas son solo algunas de las √°reas donde la IA ha mostrado un rendimiento superior.
    
    Sin embargo, este progreso no viene sin desaf√≠os. Las preocupaciones √©ticas sobre el sesgo
    algor√≠tmico, la privacidad de los datos, y el impacto en el empleo son temas centrales en el
    debate actual sobre la IA. La necesidad de desarrollar sistemas de IA responsables y transparentes
    se ha vuelto m√°s urgente que nunca.
    
    Mirando hacia el futuro, esperamos ver avances a√∫n m√°s significativos en √°reas como la IA general
    artificial (AGI), la computaci√≥n cu√°ntica aplicada a la IA, y la integraci√≥n m√°s profunda de
    sistemas inteligentes en nuestra infraestructura digital. La colaboraci√≥n entre humanos y
    m√°quinas probablemente definir√° la pr√≥xima era de la innovaci√≥n tecnol√≥gica.
    """

    # Crear analizador
    analyzer = LongTextAnalyzer(model_name="llama3.1")

    try:
        # Realizar an√°lisis
        analysis = analyzer.analyze_text(sample_text)

        # Mostrar resultados
        print(f"üéØ Palabras clave encontradas: {len(analysis.keywords)}")
        print(f"   {', '.join(analysis.keywords[:5])}...")

        print(f"\nüè∑Ô∏è Temas principales: {len(analysis.key_topics)}")
        for i, topic in enumerate(analysis.key_topics[:3], 1):
            print(f"   {i}. {topic}")

        print(f"\nüìä Estad√≠sticas:")
        print(f"   ‚Ä¢ Palabras: {analysis.word_count}")
        print(f"   ‚Ä¢ Tiempo de lectura: {analysis.reading_time} min")
        print(f"   ‚Ä¢ Sentimiento: {analysis.sentiment}")

        print(f"\nüìã Resumen (primeras 150 caracteres):")
        print(f"   {analysis.summary[:150]}...")

    except Exception as e:
        print(f"‚ùå Error en el an√°lisis: {e}")


def example_interview_analysis():
    """Ejemplo de an√°lisis especializado de entrevista"""
    print("\n" + "=" * 60)
    print("üé§ EJEMPLO 2: An√°lisis de Entrevista")
    print("=" * 60)

    # Transcripci√≥n de entrevista de ejemplo
    interview_text = """
    ENTREVISTADOR: Buenos d√≠as, muchas gracias por acompa√±arnos. ¬øPodr√≠as comenzar cont√°ndonos
    un poco sobre tu trayectoria profesional?
    
    CANDIDATO: Por supuesto, muchas gracias por la oportunidad. Tengo aproximadamente 8 a√±os
    de experiencia en desarrollo de software, principalmente enfocado en tecnolog√≠as web.
    Comenc√© mi carrera como desarrollador junior en una startup donde realmente aprend√≠ las
    bases del desarrollo √°gil y la importancia del trabajo en equipo.
    
    ENTREVISTADOR: Interesante. ¬øQu√© te motiv√≥ a especializarte en tecnolog√≠as web?
    
    CANDIDATO: La verdad es que me fascina la capacidad de crear soluciones que puedan impactar
    a miles de usuarios. En mi experiencia anterior, desarrollamos una aplicaci√≥n que ayudaba
    a peque√±as empresas a gestionar su inventario, y ver c√≥mo eso realmente mejoraba sus
    operaciones diarias fue incre√≠blemente gratificante.
    
    ENTREVISTADOR: ¬øCu√°l dir√≠as que ha sido tu mayor desaf√≠o profesional hasta ahora?
    
    CANDIDATO: Definitivamente fue cuando tuvimos que migrar un sistema legacy que manejaba
    datos cr√≠ticos para el negocio. La presi√≥n era inmensa porque no pod√≠amos permitir tiempo
    de inactividad. Aprend√≠ much√≠simo sobre planificaci√≥n, gesti√≥n de riesgos, y la importancia
    de tener un plan de contingencia s√≥lido.
    
    ENTREVISTADOR: ¬øC√≥mo te mantienes actualizado con las nuevas tecnolog√≠as?
    
    CANDIDATO: Soy muy disciplinado con esto. Dedico al menos 2 horas semanales a leer
    documentaci√≥n t√©cnica, participo activamente en comunidades online como Stack Overflow
    y GitHub, y trato de implementar peque√±os proyectos personales para experimentar con
    nuevas tecnolog√≠as antes de proponerlas en el trabajo.
    
    ENTREVISTADOR: Excelente enfoque. ¬øQu√© te atrae de esta posici√≥n espec√≠ficamente?
    
    CANDIDATO: Me emociona mucho la oportunidad de trabajar con un equipo que claramente
    valora la innovaci√≥n y la excelencia t√©cnica. Adem√°s, el hecho de que est√©n expandiendo
    su presencia internacional presenta desaf√≠os √∫nicos de escalabilidad que realmente me
    motivan a contribuir.
    """

    # Crear analizador de entrevistas
    interview_analyzer = InterviewAnalyzer(model_name="llama3.1")

    try:
        # Realizar an√°lisis especializado
        analysis = interview_analyzer.analyze_interview(interview_text)

        # Mostrar resultados
        print(f"üè∑Ô∏è Tipo de entrevista: {analysis.interview_type}")
        print(f"‚è±Ô∏è Duraci√≥n estimada: {analysis.duration_estimate} minutos")
        print(f"ü§ù Estilo de interacci√≥n: {analysis.interaction_style}")
        print(f"üòä Sentimiento general: {analysis.sentiment}")

        if analysis.speakers:
            print(f"\nüë• Participantes identificados:")
            for speaker in analysis.speakers:
                print(f"   ‚Ä¢ {speaker}")

        print(f"\nüí° Insights principales:")
        for i, insight in enumerate(analysis.main_insights[:3], 1):
            print(f"   {i}. {insight}")

        print(f"\nüí¨ Citas destacadas:")
        for i, quote in enumerate(analysis.quotes_highlights[:2], 1):
            print(f'   {i}. "{quote[:100]}..."')

        print(f"\n‚ùì Temas de preguntas/discusi√≥n:")
        for i, theme in enumerate(analysis.questions_themes, 1):
            print(f"   {i}. {theme}")

    except Exception as e:
        print(f"‚ùå Error en el an√°lisis de entrevista: {e}")


def main():
    """Funci√≥n principal para ejecutar los ejemplos"""
    example_basic_text_analysis()
    example_interview_analysis()


if __name__ == "__main__":
    main()
